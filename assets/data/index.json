{"hash":"3929e0b93be7b000ea9055010345b5482989c8a4","data":{"posts":{"totalCount":2,"pageInfo":{"perPage":2,"currentPage":1,"totalPages":1,"totalItems":2,"isFirst":true,"isLast":true},"edges":[{"node":{"id":"2","attributes":{"title":"教你如何使用vercel服务免费部署前端项目和serverless api","createdAt":"2022-09-16T10:47:09.028Z","createdBy":{"data":{"id":1,"attributes":{"firstname":"d","lastname":"hq"}}},"content":"一、介绍一下vercel\nvercel 是一个站点托管平台，提供CDN加速，同类的平台有Netlify 和 Github Pages，相比之下，vercel 国内的访问速度更快，并且提供Production环境和development环境，对于项目开发非常的有用的，并且支持持续集成，一次push或者一次PR会自动化构建发布，发布在development环境，都会生成不一样的链接可供预览。\n\n但是vercel只是针对个人用户免费，teams是收费的\n\n首先vercel零配置部署，第二访问速度比github-page好很多，并且构建很快，还是免费使用的，对于部署个人前端项目路、接口服务非常方便\n\nvercel类似于github page，但远比github page强大，速度也快得多得多，而且将Github授权给vercel后，可以达到最优雅的发布体验，只需将代码轻轻一推，项目就自动更新部署了。\nvercel还支持部署serverless接口。那代表着，其不仅仅可以部署静态网站，甚至可以部署动态网站，而这些功能，统统都是免费的\nvercel还支持自动配置https，不用自己去FreeSSL申请证书，更是省去了一大堆证书的配置\nvercel目前的部署模板有31种之多\n\n\n二、起步\n打开vercel主页https://vercel.com/signup\n\n\n\n使用GitHub账号去关联vercel，后续代码提交到vercel可以自动触发部署\n\n\n\n出现授权页面，点击Authorize Vercel。\n\n三、部署Hexo博客\nvercel是最好用的静态站点托管平台，借助vercel平台，我们可以把博客静态文件部署到vercel上，不在使用GitHub pages托管，vercel比GitHub pages快多了。\n\n选择一个vercel提供的模板部署，当然你也可以把代码提交到GitHub上，再去vercel选择即可\n\n\n\n创建一个GitHub项目，代码会自动在GitHub账号上创建\n\n\n\n创建完成后，等待vercel构建\n\n\n\n创建成功后自动跳到主页\n\n\n\n\n点击visit即可访问创建好的服务 https://hexo-seven-blush.vercel.app ，vercel会分配给我们一个默认的域名，当然你也可以自定义修改。\n\n\n\n我们可以查看打包日志，如果构建过程出现问题，在这里看即可\n\n\n\n点击view domain 绑定自定义域名\n\n\n\n然后我们去域名解析处理解析CNAME到cname.vercel-dns.com\n\n\n\n最后解析完成，访问hexo.poetries.com自定义域名即可。到此我们把博客hexo项目部署到vercel上，后期当你在GitHub提交代码会自动触发vercel打包构建\n\n你也可以从Github选择代码来创建项目\n\n\n\n导入GitHub账号上的项目\n\n\n\n\n部署vue、react等前端项目过程也类似，这里不再演示\n\n四、部署Serverless Api\n用vercel部署Serverless Api，不购买云服务器也能拥有自己的动态网站\n\n简单演示部署api接口服务\n\n\n\n配置vercel.json，更多配置在vercel官网查 https://vercel.com/docs\n\n{\n  \"headers\": [{\n    \"source\": \"/(.*)\",\n    \"headers\" : [\n      {\n        \"key\" : \"Access-Control-Allow-Origin\",\n        \"value\" : \"*\"\n      },\n      {\n        \"key\" : \"Access-Control-Allow-Headers\",\n        \"value\" : \"content-type\"\n      },\n      {\n        \"key\" : \"Access-Control-Allow-Methods\",\n        \"value\" : \"DELETE,PUT,POST,GET,OPTIONS\"\n      }\n    ]\n  }],\n  \"rewrites\": [\n    {\n      \"source\": \"/\", // 重定向配置 访问/根路径重定向到/api/query-all-users\n      \"destination\": \"/api/query-all-users\"\n    }\n  ]\n}\n创建接口，vercel约定在api下创建接口路径，最后我们可以通过域名/api/json 域名/api/query-all-users来访问接口服务，我们这里创建了两个接口\n\n// api/json.js\n// req接收所有请求信息，res 是响应信息\n// 通过module.exports暴露出去\nmodule.exports = (req, res) => {\n  res.send('test')\n我们这里使用腾讯云数据库，把一些数据存到云数据库上\n\n// utils/db.js\n\n// 操作云数据库的包\nconst cloudbase = require('@cloudbase/node-sdk')\n\nconst app = cloudbase.init({\n  env: \"填入环境ID\", // 在腾讯云后台创建环境ID\n  // 访问该链接获取secretId、secretKey填入即可 https://console.cloud.tencent.com/cam/capi\n  secretId: \"\",\n  secretKey: \"\"\n});\n\n// 1. 获取数据库引用\nmodule.exports = app.database();\n访问该链接获取secretId、secretKey填入即可 https://console.cloud.tencent.com/cam/capi\n\n\n\n来到腾讯云控制台，创建环境获取环境ID\n\n\n\n选择数据库-创建新的集合users\n\n\n\n// api/query-all-users.js\n// 查询腾讯云数据库用户记录\nconst db = require('../utils/db')\nconst _ = db.command\n\nmodule.exports = async (req, response) => {\n  let {name, pwd, size = 50} = req.query\n  \n  // 更多语法查看腾讯云数据库文档即可 https://cloud.tencent.com/document/product/876/46897\n  let { total } = await db.collection(\"users\").count()\n  let pickField = {\n    '_id': false,\n    createAt: true,\n    userName: true,\n    address: true\n  }\n  let { data } = await db.collection(\"users\")\n  .field(pickField)\n  .orderBy('createAt', 'desc')\n  .limit(parseInt(size))\n  .get()\n\n  response.json({\n    total,\n    count: data.length,\n    list: data\n  })\n}\n\n这样我们就写好了两个接口服务，提交代码到GitHub上，然后在vercel上创建项目导入GitHub上的代码部署即可，最后部署的服务通过https://域名/api/query-all-users?name=小月&size=100访问即可\n![contact-bg.jpg](/uploads/contact_bg_733625f021.jpg)","tags":{"data":[{"id":1,"attributes":{"title":"HTML"}},{"id":5,"attributes":{"title":"JavaScript"}},{"id":6,"attributes":{"title":"Nodejs"}}]}}}},{"node":{"id":"1","attributes":{"title":"HTML快速入门3分钟学会创建一个网页","createdAt":"2022-09-16T07:14:44.041Z","createdBy":{"data":{"id":1,"attributes":{"firstname":"d","lastname":"hq"}}},"content":"# 什么是HTML\n超级文本传输协议\n\n## HTML标签\n- html\n- body\n- head\n- h1\n- h*\n- title\n- div\n- p\n- span\n- section\n- button\n- input\n- code\n- strong\n- ul\n- li\n- ol\n- table\n- tr\n- td\n- tbody\n- frame\n- label\n\n### hello world in HTML\n\n```html\n<html>\n<head><title>Hello World</title></head>\n<body><h1>Hello World</h1>\n<p> this is my first HTML page!</p>\n</body>\n</html>\n```\n### how to execute the page?\nopen it in our browser.\n这是我的一个博客文章！thanks.","tags":{"data":[{"id":1,"attributes":{"title":"HTML"}},{"id":3,"attributes":{"title":"CSS"}}]}}}}]},"general":{"edges":[{"node":{"id":"673443d6","data":{"id":1,"attributes":{"title":"乐享百知","subtitle":"一个专注于学习收集分享新技术新思想的博客","cover":{"data":{"id":3,"attributes":{"url":"/uploads/home_bg_30a532d99e.jpg"}}}}}}}]}},"context":{}}